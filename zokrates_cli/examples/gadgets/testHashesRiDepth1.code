// test hashes (to use in tests)
// compiles --> Number of constraints: 110167
// hash function used twice; double number of constraints - 1 (compared to code with hash function used once)

import "PACKING/pack128"
import "LIBSNARK/sha256packed"

def main() -> (field, field):

  //field[2] rRoot = [0, 0]

  field[10] pathToLeaf = [1, 2, 2, 2, 2, 2, 2, 2, 2, 2]

  field[512] ri = [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

  field[20] rjVec = [555, 666, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

  field ri0 = pack128(ri[0], ri[1], ri[2], ri[3], ri[4], ri[5], ri[6], ri[7], ri[8], ri[9], ri[10], ri[11], ri[12], ri[13], ri[14], ri[15], ri[16], ri[17], ri[18], ri[19], ri[20], ri[21], ri[22], ri[23], ri[24], ri[25], ri[26], ri[27], ri[28], ri[29], ri[30], ri[31], ri[32], ri[33], ri[34], ri[35], ri[36], ri[37], ri[38], ri[39], ri[40], ri[41], ri[42], ri[43], ri[44], ri[45], ri[46], ri[47], ri[48], ri[49], ri[50], ri[51], ri[52], ri[53], ri[54], ri[55], ri[56], ri[57], ri[58], ri[59], ri[60], ri[61], ri[62], ri[63], ri[64], ri[65], ri[66], ri[67], ri[68], ri[69], ri[70], ri[71], ri[72], ri[73], ri[74], ri[75], ri[76], ri[77], ri[78], ri[79], ri[80], ri[81], ri[82], ri[83], ri[84], ri[85], ri[86], ri[87], ri[88], ri[89], ri[90], ri[91], ri[92], ri[93], ri[94], ri[95], ri[96], ri[97], ri[98], ri[99], ri[100], ri[101], ri[102], ri[103], ri[104], ri[105], ri[106], ri[107], ri[108], ri[109], ri[110], ri[111], ri[112], ri[113], ri[114], ri[115], ri[116], ri[117], ri[118], ri[119], ri[120], ri[121], ri[122], ri[123], ri[124], ri[125], ri[126], ri[127])

  field ri1 = pack128(ri[128], ri[129], ri[130], ri[131], ri[132], ri[133], ri[134], ri[135], ri[136], ri[137], ri[138], ri[139], ri[140], ri[141], ri[142], ri[143], ri[144], ri[145], ri[146], ri[147], ri[148], ri[149], ri[150], ri[151], ri[152], ri[153], ri[154], ri[155], ri[156], ri[157], ri[158], ri[159], ri[160], ri[161], ri[162], ri[163], ri[164], ri[165], ri[166], ri[167], ri[168], ri[169], ri[170], ri[171], ri[172], ri[173], ri[174], ri[175], ri[176], ri[177], ri[178], ri[179], ri[180], ri[181], ri[182], ri[183], ri[184], ri[185], ri[186], ri[187], ri[188], ri[189], ri[190], ri[191], ri[192], ri[193], ri[194], ri[195], ri[196], ri[197], ri[198], ri[199], ri[200], ri[201], ri[202], ri[203], ri[204], ri[205], ri[206], ri[207], ri[208], ri[209], ri[210], ri[211], ri[212], ri[213], ri[214], ri[215], ri[216], ri[217], ri[218], ri[219], ri[220], ri[221], ri[222], ri[223], ri[224], ri[225], ri[226], ri[227], ri[228], ri[229], ri[230], ri[231], ri[232], ri[233], ri[234], ri[235], ri[236], ri[237], ri[238], ri[239], ri[240], ri[241], ri[242], ri[243], ri[244], ri[245], ri[246], ri[247], ri[248], ri[249], ri[250], ri[251], ri[252], ri[253], ri[254], ri[255])

  field ri2 = pack128(ri[256], ri[257], ri[258], ri[259], ri[260], ri[261], ri[262], ri[263], ri[264], ri[265], ri[266], ri[267], ri[268], ri[269], ri[270], ri[271], ri[272], ri[273], ri[274], ri[275], ri[276], ri[277], ri[278], ri[279], ri[280], ri[281], ri[282], ri[283], ri[284], ri[285], ri[286], ri[287], ri[288], ri[289], ri[290], ri[291], ri[292], ri[293], ri[294], ri[295], ri[296], ri[297], ri[298], ri[299], ri[300], ri[301], ri[302], ri[303], ri[304], ri[305], ri[306], ri[307], ri[308], ri[309], ri[310], ri[311], ri[312], ri[313], ri[314], ri[315], ri[316], ri[317], ri[318], ri[319], ri[320], ri[321], ri[322], ri[323], ri[324], ri[325], ri[326], ri[327], ri[328], ri[329], ri[330], ri[331], ri[332], ri[333], ri[334], ri[335], ri[336], ri[337], ri[338], ri[339], ri[340], ri[341], ri[342], ri[343], ri[344], ri[345], ri[346], ri[347], ri[348], ri[349], ri[350], ri[351], ri[352], ri[353], ri[354], ri[355], ri[356], ri[357], ri[358], ri[359], ri[360], ri[361], ri[362], ri[363], ri[364], ri[365], ri[366], ri[367], ri[368], ri[369], ri[370], ri[371], ri[372], ri[373], ri[374], ri[375], ri[376], ri[377], ri[378], ri[379], ri[380], ri[381], ri[382], ri[383])

  field ri3 = pack128(ri[384], ri[385], ri[386], ri[387], ri[388], ri[389], ri[390], ri[391], ri[392], ri[393], ri[394], ri[395], ri[396], ri[397], ri[398], ri[399], ri[400], ri[401], ri[402], ri[403], ri[404], ri[405], ri[406], ri[407], ri[408], ri[409], ri[410], ri[411], ri[412], ri[413], ri[414], ri[415], ri[416], ri[417], ri[418], ri[419], ri[420], ri[421], ri[422], ri[423], ri[424], ri[425], ri[426], ri[427], ri[428], ri[429], ri[430], ri[431], ri[432], ri[433], ri[434], ri[435], ri[436], ri[437], ri[438], ri[439], ri[440], ri[441], ri[442], ri[443], ri[444], ri[445], ri[446], ri[447], ri[448], ri[449], ri[450], ri[451], ri[452], ri[453], ri[454], ri[455], ri[456], ri[457], ri[458], ri[459], ri[460], ri[461], ri[462], ri[463], ri[464], ri[465], ri[466], ri[467], ri[468], ri[469], ri[470], ri[471], ri[472], ri[473], ri[474], ri[475], ri[476], ri[477], ri[478], ri[479], ri[480], ri[481], ri[482], ri[483], ri[484], ri[485], ri[486], ri[487], ri[488], ri[489], ri[490], ri[491], ri[492], ri[493], ri[494], ri[495], ri[496], ri[497], ri[498], ri[499], ri[500], ri[501], ri[502], ri[503], ri[504], ri[505], ri[506], ri[507], ri[508], ri[509], ri[510], ri[511])

//calculate hash of ri: get 2 fields (with sha256packed)
  riH0, riH1 = sha256packed(ri0, ri1, ri2, ri3)

  root0, root1 = sha256packed(riH0, riH1, rjVec[0], rjVec[1])

  return root0, root1
  //result: return _103256, _103257 (does not seem to be hash)
